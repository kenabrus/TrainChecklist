// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrainChecklist.Data;

namespace TrainChecklist.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TrainChecklist.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AllDay")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("End")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Start")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("EventId");

                    b.ToTable("Event");
                });

            modelBuilder.Entity("TrainChecklist.Models.Pojazd", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("NazwaPojazdu")
                        .IsRequired()
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.Property<long>("ProjektId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ProjektId");

                    b.ToTable("Pojazd");
                });

            modelBuilder.Entity("TrainChecklist.Models.Projekt", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataRozpoczeciaProjektu")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataZakonczeniaProjektu")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NazwaProjektu")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Projekt");
                });

            modelBuilder.Entity("TrainChecklist.Models.Pojazd", b =>
                {
                    b.HasOne("TrainChecklist.Models.Projekt", "Projekt")
                        .WithMany("Pojazdy")
                        .HasForeignKey("ProjektId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
